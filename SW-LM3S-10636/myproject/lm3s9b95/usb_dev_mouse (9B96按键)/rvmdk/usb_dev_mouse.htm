<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\usb_dev_mouse.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\usb_dev_mouse.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 561]: Last Updated: Sun Apr 17 10:50:05 2011
<BR><P>
<H3>Maximum Stack Usage =        388 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USBDSetConfiguration &rArr; USBDeviceConfig &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[22]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[26]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">SysCtlDelay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[9]">HIDMouseRxHandler</a> from usbdhidmouse.o(i.HIDMouseRxHandler) referenced from usbdhidmouse.o(i.USBDHIDMouseCompositeInit)
 <LI><a href="#[a]">HIDMouseTxHandler</a> from usbdhidmouse.o(i.HIDMouseTxHandler) referenced from usbdhidmouse.o(i.USBDHIDMouseCompositeInit)
 <LI><a href="#[8]">HIDTickHandler</a> from usbdhid.o(i.HIDTickHandler) referenced from usbdhid.o(i.USBDHIDCompositeInit)
 <LI><a href="#[19]">HandleConfigChange</a> from usbdhid.o(i.HandleConfigChange) referenced from usbdhid.o(.data)
 <LI><a href="#[21]">HandleDevice</a> from usbdhid.o(i.HandleDevice) referenced from usbdhid.o(.data)
 <LI><a href="#[1f]">HandleDisconnect</a> from usbdhid.o(i.HandleDisconnect) referenced from usbdhid.o(.data)
 <LI><a href="#[1a]">HandleEP0DataReceived</a> from usbdhid.o(i.HandleEP0DataReceived) referenced from usbdhid.o(.data)
 <LI><a href="#[1b]">HandleEP0DataSent</a> from usbdhid.o(i.HandleEP0DataSent) referenced from usbdhid.o(.data)
 <LI><a href="#[20]">HandleEndpoints</a> from usbdhid.o(i.HandleEndpoints) referenced from usbdhid.o(.data)
 <LI><a href="#[17]">HandleGetDescriptor</a> from usbdhid.o(i.HandleGetDescriptor) referenced from usbdhid.o(.data)
 <LI><a href="#[18]">HandleRequest</a> from usbdhid.o(i.HandleRequest) referenced from usbdhid.o(.data)
 <LI><a href="#[1c]">HandleReset</a> from usbdhid.o(i.HandleReset) referenced from usbdhid.o(.data)
 <LI><a href="#[1e]">HandleResume</a> from usbdhid.o(i.HandleResume) referenced from usbdhid.o(.data)
 <LI><a href="#[1d]">HandleSuspend</a> from usbdhid.o(i.HandleSuspend) referenced from usbdhid.o(.data)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 52 times from startup_rvmdk.o(RESET)
 <LI><a href="#[b]">MouseHandler</a> from usb_dev_mouse.o(i.MouseHandler) referenced from usb_mouse_structs.o(.constdata)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[22]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">SysTickHandler</a> from usb_dev_mouse.o(i.SysTickHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">UARTStdioIntHandler</a> from uartstdio.o(i.UARTStdioIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[6]">USB0DeviceIntHandler</a> from usbdhandler.o(i.USB0DeviceIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[d]">USBDClearFeature</a> from usbdenum.o(i.USBDClearFeature) referenced from usbdenum.o(.constdata)
 <LI><a href="#[12]">USBDGetConfiguration</a> from usbdenum.o(i.USBDGetConfiguration) referenced from usbdenum.o(.constdata)
 <LI><a href="#[10]">USBDGetDescriptor</a> from usbdenum.o(i.USBDGetDescriptor) referenced from usbdenum.o(.constdata)
 <LI><a href="#[14]">USBDGetInterface</a> from usbdenum.o(i.USBDGetInterface) referenced from usbdenum.o(.constdata)
 <LI><a href="#[c]">USBDGetStatus</a> from usbdenum.o(i.USBDGetStatus) referenced from usbdenum.o(.constdata)
 <LI><a href="#[f]">USBDSetAddress</a> from usbdenum.o(i.USBDSetAddress) referenced from usbdenum.o(.constdata)
 <LI><a href="#[13]">USBDSetConfiguration</a> from usbdenum.o(i.USBDSetConfiguration) referenced from usbdenum.o(.constdata)
 <LI><a href="#[11]">USBDSetDescriptor</a> from usbdenum.o(i.USBDSetDescriptor) referenced from usbdenum.o(.constdata)
 <LI><a href="#[e]">USBDSetFeature</a> from usbdenum.o(i.USBDSetFeature) referenced from usbdenum.o(.constdata)
 <LI><a href="#[15]">USBDSetInterface</a> from usbdenum.o(i.USBDSetInterface) referenced from usbdenum.o(.constdata)
 <LI><a href="#[16]">USBDSyncFrame</a> from usbdenum.o(i.USBDSyncFrame) referenced from usbdenum.o(.constdata)
 <LI><a href="#[7]">main</a> from usb_dev_mouse.o(i.main) referenced from entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[22]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[23]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[75]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[24]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[27]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[76]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[26]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>

<P><STRONG><a name="[36]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterDisable
</UL>

<P><STRONG><a name="[77]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[38]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[78]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[79]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[7a]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[25]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[7b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>IntEnable</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[35]"></a>IntMasterDisable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterDisable), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsid
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushRx
</UL>

<P><STRONG><a name="[37]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushRx
</UL>

<P><STRONG><a name="[5d]"></a>InternalUSBRegisterTickHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbtick.o(i.InternalUSBRegisterTickHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDCompositeInit
</UL>

<P><STRONG><a name="[6d]"></a>InternalUSBStartOfFrameTick</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usbtick.o(i.InternalUSBStartOfFrameTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InternalUSBStartOfFrameTick
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>

<P><STRONG><a name="[4e]"></a>InternalUSBTickInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usbtick.o(i.InternalUSBTickInit))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDCompositeInit
</UL>

<P><STRONG><a name="[b]"></a>MouseHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usb_dev_mouse.o(i.MouseHandler))
<BR>[Address Reference Count : 1]<UL><LI> usb_mouse_structs.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>SysCtlClockGet</STRONG> (Thumb, 444 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[3a]"></a>SysCtlClockSet</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[4b]"></a>SysCtlPeripheralReset</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, sysctl.o(i.SysCtlPeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysCtlPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[4d]"></a>SysCtlUSBPLLEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlUSBPLLEnable))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[72]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>SysTickHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb_dev_mouse.o(i.SysTickHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>UARTFlushRx</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uartstdio.o(i.UARTFlushRx), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[3c]"></a>UARTFlushTx</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, uartstdio.o(i.UARTFlushTx), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterDisable
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>

<P><STRONG><a name="[6f]"></a>UARTStdioInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uartstdio.o(i.UARTStdioInit))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>UARTStdioInitExpClk</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioInitExpClk), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushRx
</UL>

<P><STRONG><a name="[5]"></a>UARTStdioIntHandler</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UARTStdioIntHandler &rArr; UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferFull
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UARTwrite</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, uartstdio.o(i.UARTwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UARTwrite &rArr; UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferFull
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>

<P><STRONG><a name="[6]"></a>USB0DeviceIntHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbdhandler.o(i.USB0DeviceIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = USB0DeviceIntHandler &rArr; USBDeviceIntHandlerInternal &rArr; USBDeviceEnumHandler &rArr; USBDEP0StateTxConfig &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntStatusControl
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>USBDCDConfigDescGet</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, usbdcdesc.o(i.USBDCDConfigDescGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBDCDConfigDescGet &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDescGetNum
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDescGet
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
</UL>

<P><STRONG><a name="[47]"></a>USBDCDConfigDescGetNum</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, usbdcdesc.o(i.USBDCDConfigDescGetNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBDCDConfigDescGetNum &rArr; USBDescGetNum
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDescGetNum
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetInterface
</UL>

<P><STRONG><a name="[5b]"></a>USBDCDConfigDescGetSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usbdcdesc.o(i.USBDCDConfigDescGetSize))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetDescriptor
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTxConfig
</UL>

<P><STRONG><a name="[48]"></a>USBDCDConfigGetInterface</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, usbdcdesc.o(i.USBDCDConfigGetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDescGetNum
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDescGet
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetInterface
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterfaceEndpoint
</UL>

<P><STRONG><a name="[49]"></a>USBDCDConfigGetInterfaceEndpoint</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, usbdcdesc.o(i.USBDCDConfigGetInterfaceEndpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
</UL>

<P><STRONG><a name="[4a]"></a>USBDCDInit</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, usbdenum.o(i.USBDCDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBDCDInit &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalUSBTickInit
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntStatusEndpoint
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntEnableEndpoint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntEnableControl
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevMode
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevDisconnect
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevConnect
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntStatusControl
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlUSBPLLEnable
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReset
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDInit
</UL>

<P><STRONG><a name="[33]"></a>USBDCDRequestDataEP0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbdenum.o(i.USBDCDRequestDataEP0))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleRequest
</UL>

<P><STRONG><a name="[31]"></a>USBDCDSendDataEP0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbdenum.o(i.USBDCDSendDataEP0))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBDCDSendDataEP0 &rArr; USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleRequest
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleGetDescriptor
</UL>

<P><STRONG><a name="[32]"></a>USBDCDStallEP0</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbdenum.o(i.USBDCDStallEP0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBDCDStallEP0
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleRequest
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleGetDescriptor
</UL>

<P><STRONG><a name="[5c]"></a>USBDHIDCompositeInit</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, usbdhid.o(i.USBDHIDCompositeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBDHIDCompositeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalUSBTickInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalUSBRegisterTickHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDMouseCompositeInit
</UL>

<P><STRONG><a name="[5e]"></a>USBDHIDInit</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, usbdhid.o(i.USBDHIDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USBDHIDInit &rArr; USBDCDInit &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDCompositeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDMouseInit
</UL>

<P><STRONG><a name="[5f]"></a>USBDHIDMouseCompositeInit</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, usbdhidmouse.o(i.USBDHIDMouseCompositeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBDHIDMouseCompositeInit &rArr; USBDHIDCompositeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDCompositeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDMouseInit
</UL>

<P><STRONG><a name="[60]"></a>USBDHIDMouseInit</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbdhidmouse.o(i.USBDHIDMouseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBDHIDMouseInit &rArr; USBDHIDInit &rArr; USBDCDInit &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDMouseCompositeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>USBDHIDMouseStateChange</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, usbdhidmouse.o(i.USBDHIDMouseStateChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USBDHIDMouseStateChange &rArr; USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDTxPacketAvailable
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDReportWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>USBDHIDReportWrite</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, usbdhid.o(i.USBDHIDReportWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataSend
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDMouseStateChange
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIdleTimers
</UL>

<P><STRONG><a name="[62]"></a>USBDHIDTxPacketAvailable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbdhid.o(i.USBDHIDTxPacketAvailable))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDMouseStateChange
</UL>

<P><STRONG><a name="[46]"></a>USBDescGet</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, usbdesc.o(i.USBDescGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USBDescGet
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGet
</UL>

<P><STRONG><a name="[45]"></a>USBDescGetNum</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usbdesc.o(i.USBDescGetNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBDescGetNum
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetNum
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGet
</UL>

<P><STRONG><a name="[6b]"></a>USBDevAddrSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb.o(i.USBDevAddrSet))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
</UL>

<P><STRONG><a name="[55]"></a>USBDevConnect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(i.USBDevConnect))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[52]"></a>USBDevDisconnect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(i.USBDevDisconnect))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>

<P><STRONG><a name="[69]"></a>USBDevEndpointConfigGet</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointConfigGet))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
</UL>

<P><STRONG><a name="[67]"></a>USBDevEndpointConfigSet</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
</UL>

<P><STRONG><a name="[34]"></a>USBDevEndpointDataAck</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointDataAck))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSyncFrame
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetInterface
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetFeature
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetDescriptor
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetConfiguration
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetAddress
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetStatus
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetInterface
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetDescriptor
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetConfiguration
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDClearFeature
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleRequest
</UL>

<P><STRONG><a name="[58]"></a>USBDevEndpointStall</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointStall))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDStallEP0
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSyncFrame
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetInterface
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetFeature
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetDescriptor
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetConfiguration
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDReadAndDispatchRequest
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetStatus
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetInterface
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetDescriptor
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDClearFeature
</UL>

<P><STRONG><a name="[59]"></a>USBDevEndpointStallClear</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointStallClear))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDClearFeature
</UL>

<P><STRONG><a name="[2e]"></a>USBDevEndpointStatusClear</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointStatusClear))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
</UL>

<P><STRONG><a name="[54]"></a>USBDevMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb.o(i.USBDevMode))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[65]"></a>USBDeviceConfig</STRONG> (Thumb, 556 bytes, Stack size 304 bytes, usbdconfig.o(i.USBDeviceConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = USBDeviceConfig &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetNum
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBFIFOConfigSet
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointConfigSet
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterfaceEndpoint
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGet
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetConfiguration
</UL>

<P><STRONG><a name="[66]"></a>USBDeviceConfigAlternate</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, usbdconfig.o(i.USBDeviceConfigAlternate))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = USBDeviceConfigAlternate &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetNum
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointConfigSet
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointConfigGet
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterfaceEndpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetInterface
</UL>

<P><STRONG><a name="[6a]"></a>USBDeviceEnumHandler</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, usbdenum.o(i.USBDeviceEnumHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USBDeviceEnumHandler &rArr; USBDEP0StateTxConfig &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDReadAndDispatchRequest
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTxConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointStatus
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataGet
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStatusClear
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevAddrSet
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>

<P><STRONG><a name="[43]"></a>USBDeviceIntHandlerInternal</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, usbdenum.o(i.USBDeviceIntHandlerInternal))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = USBDeviceIntHandlerInternal &rArr; USBDeviceEnumHandler &rArr; USBDEP0StateTxConfig &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalUSBStartOfFrameTick
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntStatusEndpoint
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBHostResume
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevDisconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0DeviceIntHandler
</UL>

<P><STRONG><a name="[2c]"></a>USBEndpointDataAvail</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usb.o(i.USBEndpointDataAvail))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIDTickHandler
</UL>

<P><STRONG><a name="[64]"></a>USBEndpointDataGet</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, usb.o(i.USBEndpointDataGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USBEndpointDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDReadAndDispatchRequest
</UL>

<P><STRONG><a name="[2f]"></a>USBEndpointDataPut</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, usb.o(i.USBEndpointDataPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USBEndpointDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTxConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDReportWrite
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
</UL>

<P><STRONG><a name="[30]"></a>USBEndpointDataSend</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usb.o(i.USBEndpointDataSend))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTxConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDReportWrite
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
</UL>

<P><STRONG><a name="[2d]"></a>USBEndpointStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb.o(i.USBEndpointStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
</UL>

<P><STRONG><a name="[68]"></a>USBFIFOConfigSet</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, usb.o(i.USBFIFOConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
</UL>

<P><STRONG><a name="[6c]"></a>USBHostResume</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb.o(i.USBHostResume))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>

<P><STRONG><a name="[50]"></a>USBIntEnableControl</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usb.o(i.USBIntEnableControl))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[51]"></a>USBIntEnableEndpoint</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb.o(i.USBIntEnableEndpoint))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[42]"></a>USBIntStatusControl</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, usb.o(i.USBIntStatusControl))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0DeviceIntHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[4f]"></a>USBIntStatusEndpoint</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(i.USBIntStatusEndpoint))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>

<P><STRONG><a name="[74]"></a>WaitForSendIdle</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, usb_dev_mouse.o(i.WaitForSendIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WaitForSendIdle
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[7d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[7e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[7]"></a>main</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, usb_dev_mouse.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = main &rArr; USBDHIDMouseInit &rArr; USBDHIDInit &rArr; USBDCDInit &rArr; SysCtlClockGet
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDMouseStateChange
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDMouseInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForSendIdle
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>IsBufferEmpty</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uartstdio.o(i.IsBufferEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFlushTx
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTPrimeTransmit
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>

<P><STRONG><a name="[41]"></a>IsBufferFull</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uartstdio.o(i.IsBufferFull))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>

<P><STRONG><a name="[3e]"></a>UARTPrimeTransmit</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, uartstdio.o(i.UARTPrimeTransmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTPrimeTransmit
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsBufferEmpty
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioIntHandler
</UL>

<P><STRONG><a name="[9]"></a>HIDMouseRxHandler</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, usbdhidmouse.o(i.HIDMouseRxHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HIDMouseRxHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhidmouse.o(i.USBDHIDMouseCompositeInit)
</UL>
<P><STRONG><a name="[a]"></a>HIDMouseTxHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usbdhidmouse.o(i.HIDMouseTxHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HIDMouseTxHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhidmouse.o(i.USBDHIDMouseCompositeInit)
</UL>
<P><STRONG><a name="[d]"></a>USBDClearFeature</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, usbdenum.o(i.USBDClearFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBDClearFeature
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStallClear
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>USBDEP0StateTx</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, usbdenum.o(i.USBDEP0StateTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataSend
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDSendDataEP0
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetStatus
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetInterface
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetDescriptor
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetConfiguration
</UL>

<P><STRONG><a name="[5a]"></a>USBDEP0StateTxConfig</STRONG> (Thumb, 350 bytes, Stack size 48 bytes, usbdenum.o(i.USBDEP0StateTxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USBDEP0StateTxConfig &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetSize
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataSend
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetDescriptor
</UL>

<P><STRONG><a name="[12]"></a>USBDGetConfiguration</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, usbdenum.o(i.USBDGetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBDGetConfiguration &rArr; USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[10]"></a>USBDGetDescriptor</STRONG> (Thumb, 318 bytes, Stack size 40 bytes, usbdenum.o(i.USBDGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USBDGetDescriptor &rArr; USBDEP0StateTxConfig &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetSize
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTxConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[14]"></a>USBDGetInterface</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, usbdenum.o(i.USBDGetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBDGetInterface &rArr; USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[c]"></a>USBDGetStatus</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, usbdenum.o(i.USBDGetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USBDGetStatus &rArr; USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>USBDReadAndDispatchRequest</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, usbdenum.o(i.USBDReadAndDispatchRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USBDReadAndDispatchRequest &rArr; USBEndpointDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataGet
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
</UL>

<P><STRONG><a name="[f]"></a>USBDSetAddress</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usbdenum.o(i.USBDSetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBDSetAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[13]"></a>USBDSetConfiguration</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, usbdenum.o(i.USBDSetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = USBDSetConfiguration &rArr; USBDeviceConfig &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[11]"></a>USBDSetDescriptor</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbdenum.o(i.USBDSetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBDSetDescriptor
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[e]"></a>USBDSetFeature</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, usbdenum.o(i.USBDSetFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBDSetFeature
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[15]"></a>USBDSetInterface</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, usbdenum.o(i.USBDSetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = USBDSetInterface &rArr; USBDeviceConfigAlternate &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetNum
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[16]"></a>USBDSyncFrame</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbdenum.o(i.USBDSyncFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBDSyncFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[8]"></a>HIDTickHandler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usbdhid.o(i.HIDTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HIDTickHandler &rArr; ProcessIdleTimers &rArr; USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataAvail
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIdleTimers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(i.USBDHIDCompositeInit)
</UL>
<P><STRONG><a name="[19]"></a>HandleConfigChange</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usbdhid.o(i.HandleConfigChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HandleConfigChange
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>HandleDevice</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usbdhid.o(i.HandleDevice))
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>HandleDisconnect</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usbdhid.o(i.HandleDisconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HandleDisconnect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>HandleEP0DataReceived</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, usbdhid.o(i.HandleEP0DataReceived))
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>HandleEP0DataSent</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usbdhid.o(i.HandleEP0DataSent))
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>HandleEndpoints</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, usbdhid.o(i.HandleEndpoints))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HandleEndpoints &rArr; ProcessIdleTimers &rArr; USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointStatus
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataSend
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataPut
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataAvail
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStatusClear
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIdleTimers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>HandleGetDescriptor</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, usbdhid.o(i.HandleGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HandleGetDescriptor &rArr; USBDCDSendDataEP0 &rArr; USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDStallEP0
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDSendDataEP0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>HandleRequest</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, usbdhid.o(i.HandleRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HandleRequest &rArr; ProcessIdleTimers &rArr; USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDStallEP0
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDSendDataEP0
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDRequestDataEP0
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIdleTimers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>HandleReset</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usbdhid.o(i.HandleReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HandleReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>HandleResume</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbdhid.o(i.HandleResume))
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>HandleSuspend</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbdhid.o(i.HandleSuspend))
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>ProcessIdleTimers</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, usbdhid.o(i.ProcessIdleTimers))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ProcessIdleTimers &rArr; USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDReportWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleRequest
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIDTickHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
