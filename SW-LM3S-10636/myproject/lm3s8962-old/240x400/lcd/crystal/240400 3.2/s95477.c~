
#include <reg52.h>
#include <math.h>
#include <intrins.h>
#include <nop.h>
//=================================函数声名=====================================//
void  Delay(unsigned int t);
void  delay_TP(unsigned char i);
void Switch();
void  start();
void  WriteCharTo7843(unsigned char num);
unsigned int ReadFromCharFrom7843();
void  AD7843(void);
void  wdbit(unsigned char  bit1,unsigned int Xstart,unsigned int Ystart);
void  displaybout(unsigned int bout1,unsigned int bout2);
void wr_comm(unsigned int index);
void wr_dat(unsigned int dat);
void wr_com(unsigned int i,unsigned int j);
void write_bmp(unsigned int add);
void lcd_int(void); 
void dis_color1(void);
void dis_color2(unsigned int j);
void dis_color3(unsigned int i,unsigned int j);
void dis_color4(unsigned int a,unsigned int b,unsigned int c,unsigned int d,unsigned int e,unsigned int f,unsigned int g,unsigned int h);        
void dis_bmp1(void);
void dis_bmp2(void);
void windows(long int Xstart,long int Ystart);
void windows_FILL(long int Xstart,long int Ystart);
unsigned char code point[];
unsigned char code tab2[];
//====================定义全局变量用来存放触摸屏的X/Y轴坐标======================//     
unsigned int TP_X,TP_Y;                             
//===============================定义个各个引脚==================================//       
sbit 	CS = P3^5;                                   //Chip Select,芯片使能,拉低芯片才能正常工作
sbit    RS = P2^3;				   //Register Select,寄存器选择,拉低时写寄存器
sbit 	WRITE = P2^2;				   //写使能,拉低时写数据
sbit 	READ = P2^1;					//读使能
sbit    REST = P3^4;					//复位
sbit    S1  = P2^0;   
sbit    A16 = P3^3;
sbit    A17  = P3^6;
sbit    A18  = P3^7;  
sbit    DOE = P2^7;
sbit    COE = P2^6;
//===============================触摸屏引脚定义===================================//
sbit    DCLK = P3^0;                                  
sbit    CS1  = P3^1;
sbit    DIN  = P3^6;
sbit    DOUT = P3^7;
sbit    BUSY = P3^3;
sbit    IRQ  = P3^2;
//================================================================================//
#define  DP_L   P1
#define  DP_H	P0
//===============================t=1时延迟约5ms===================================//
void  Delay(unsigned int t)                          
{
   unsigned int n,m;
   for(n=0;n<t;n++)
   for(m=0;m<1000;m++);
}	
//================================================================================//
void  delay_TP(unsigned char i)
{
   while(i--);
}
//================================================================================//
void Switch()
{
  repeat:
     if(S1&0x01) goto repeat;
     else  Delay(10);
     if(S1&0x01) goto repeat;
     else 
     S1=1;
}
//================================== SPI开始 =====================================//
void  start()                                        
{
   DCLK=0;
   CS1=1;
   DCLK=1;
   CS1=0;
}
//==================================SPI写数据=====================================//
void  WriteCharTo7843(unsigned char num)           
{
   unsigned char count;
   DCLK=0;
   for(count=0;count<8;count++)
    {
      num<<=1;
      DIN=CY;
      DCLK=0;_nop_();_nop_();_nop_();              //上升沿有效
      DCLK=1;_nop_();_nop_();_nop_();
    }
}
//================================SPI读数据=====================================//
unsigned int ReadFromCharFrom7843()                
{
   unsigned char count;
   unsigned int Num=0;
   //DOUT=1;
   for(count=0;count<12;count++)
     {
       Num<<=1;
       DCLK=1;_nop_();_nop_();_nop_();   //下降沿有效
       DCLK=0;_nop_();_nop_();_nop_();
       if(DOUT) Num++;
     }
   return(Num);
}
//================================================================================//
void  AD7843(void)                               //外部中断0 用来接受键盘发来的数据
{
   delay_TP(10000);                              //中断后延时以消除抖动，使得采样数据更准确
   start();                                      //启动SPI
   //while(BUSY);                                //如果BUSY信号不好使可以删除不用
   delay_TP(2);
   WriteCharTo7843(0x90);                        //送控制字 10010000 即用差分方式读y坐标 详细请见有关资料
   //while(BUSY);                                //如果BUSY信号不好使可以删除不用
   delay_TP(2);
   DCLK=1;_nop_();_nop_();_nop_();_nop_();
   DCLK=0;_nop_();_nop_();_nop_();_nop_();
   TP_Y=ReadFromCharFrom7843();
   CS1=1;
   CS1=0;
   WriteCharTo7843(0xD0);                        //送控制字 11010000 即用差分方式读X坐标 详细请见有关资料
   DCLK=1;_nop_();_nop_();_nop_();_nop_();
   DCLK=0;_nop_();_nop_();_nop_();_nop_();
   TP_X=ReadFromCharFrom7843();
   CS1=1;
}
//================================================================================//
void  wdbit(unsigned char  bit1,unsigned int Xstart,unsigned int Ystart) //写一个数字　８＊１６；
//bit1:指向数字8*16的代码；xdree:指向Ｘ地址；
{
   unsigned  char data  n,TEMP,j,spare;           //计算代码：
   unsigned char  *ptt;
//   wr_com(0x0002,Xstart);    //设置AC初始值(GRAM=0000)
//   wr_com(0x0003,Ystart);    //设置AC初始值(GRAM=0000)
   wr_com(0x0004,Xstart);
   wr_com(0x0211,Xstart+29);
   wr_com(0x0212,Ystart);
   wr_com(0x0213,Ystart+29);
   wr_comm(0x0202);
   bit1=bit1*16;
   ptt=tab2;ptt=ptt+bit1;
   for(n=0;n<16;n++)                            //**132
     {
       TEMP=*ptt++;
       for(j=0;j<8;j++)
         {
           spare=TEMP&0x80;
           if(spare==0x80)  wr_dat(0x0000);
           else             wr_dat(0xffff);
           TEMP=TEMP<<1;
         }
     }
   wr_com(0x0200,Xstart);    //设置AC初始值(GRAM=0000)
   wr_com(0x0201,Ystart);    //设置AC初始值(GRAM=0000)
   wr_com(0x0210,Xstart);
   wr_com(0x0211,Xstart+29);
   wr_com(0x0212,Ystart);
   wr_com(0x0213,Ystart+29);                  
   wr_com(0x0202,0x0000);                       
}
//=================================显示TPX/Y坐标==================================//
void  displaybout(unsigned int bout1,unsigned int bout2)
{
   unsigned char bouta,boutb,boutc,boutd;
   bouta=bout1/1000;              //取RA+RB个位(十六进制)
   bout1=bout1%1000;
   boutb=bout1/100;               //取RA+RB个位(十六进制)
   bout1=bout1%100;
   boutc=bout1/10;                //取RA+RB十位
   boutd=bout1%10;                //取RA+RB个位(十六进制)
   wdbit(bouta,0x0000,0x0000);    //显示数据，XSTART20，XEND27，YSTART0，YEND30
   wdbit(boutb,0x0008,0x0000);    //显示数据，XSTART28，XEND35，YSTART，YEND
   wdbit(boutc,0x0010,0x0000);    //显示数据，XSTART36，XEND41，YSTART，YEND
   wdbit(boutd,0x0018,0x0000);    //显示数据，XSTART42，XEND49，YSTART，YEND
   bouta=bout2/1000;              //取RA+RB个位(十六进制)
   bout2=bout2%1000;
   boutb=bout2/100;               //取RA+RB个位(十六进制)
   bout2=bout2%100;
   boutc=bout2/10;                //取RA+RB十位
   boutd=bout2%10;                //取RA+RB个位(十六进制)
   wdbit(bouta,0x0000,0x0010);    //显示数据，XSTART20，XEND27，YSTART0，YEND30
   wdbit(boutb,0x0008,0x0010);    //显示数据，XSTART28，XEND35，YSTART，YEND
   wdbit(boutc,0x0010,0x0010);    //显示数据，XSTART36，XEND41，YSTART，YEND
   wdbit(boutd,0x0018,0x0010);    //显示数据，XSTART42，XEND49，YSTART，YEND
}	
//================================================================================//
void wr_comm(unsigned int index)
{  
   DOE=0;
   COE=1;
   RS = 0;
   CS = 0;
   DP_L = index;
   DP_H = index>>8;
   WRITE = 0;
   WRITE = 1;
   CS = 1;
}
//================================================================================//
void wr_dat(unsigned int dat)
{  
   DOE=0; 
   COE=1;
   RS = 1;
   CS = 0; 
   DP_L = dat;
   DP_H = dat>>8;
    _nop_();
    _nop_();
    _nop_();
    _nop_();
   WRITE = 0;
    _nop_();
    _nop_();
    _nop_();
    _nop_();
   WRITE = 1;
    _nop_();
    _nop_();
    _nop_();
    _nop_();
   CS = 1;
}
//================================write command====================================//
void wr_com(unsigned int i,unsigned int j)    
{         
   wr_comm(i);      
   wr_dat(j);   
}
//================================================================================//
void write_bmp(unsigned int add)
{ 
   DOE=1;
   COE=0;
   RS = 1;
   CS = 0;
   DP_L = add;
   DP_H = add>>8;
    _nop_();
    _nop_();
    _nop_();
    _nop_();    
   WRITE = 0;
    _nop_();
    _nop_();
    _nop_();
    _nop_();   
   WRITE = 1;
    _nop_();
    _nop_();
    _nop_();
    _nop_();    
   CS = 1;
}
void lcd_int(void)
{
// VCI=2.8V
//************* Reset LCD Driver ****************//
REST = 1;
Delay(10);; // Delay 1ms
REST = 0;
Delay(10);; // Delay 10ms // This delay time is necessary
REST = 1;
Delay(10);; // Delay 150 ms
wr_com(0x0083,0x0002); // TESTM=1
wr_com(0x0085,0x0002); // VDC_SEL=011.
wr_com(0x008B,0x0000); // STBA[15:8]=0x00
wr_com(0x008C,0x0033); // STBA[7]=1, STBA[5:4]=01, STBA[1:0]=11
wr_com(0x0091,0x0001); // DCDC_SYNC=1
wr_com(0x0083,0x0000); // TESTM=0
// Gamma Setting
wr_com(0x003E,0x00f0); //γ center adjustment register for positive 
wr_com(0x003F,0x0007); //γ center adjustment register for negative 
wr_com(0x0040,0x0000); //γ macro adjustment register for positive 
wr_com(0x0041,0x0043); //γ macro adjustment register for positive 
wr_com(0x0042,0x0016); //γ macro adjustment register for positive 
wr_com(0x0043,0x0016); //γ macro adjustment register for negative 
wr_com(0x0044,0x0043); //γ macro adjustment register for negative 
wr_com(0x0045,0x0077); //γ macro adjustment register for negative 
wr_com(0x0046,0x0000); //γ offset adjustment register for positive 
wr_com(0x0047,0x001e); //γ offset adjustment register for positive 
wr_com(0x0048,0x000f); //γ offset adjustment register for negative 
wr_com(0x0049,0x0000); //γ offset adjustment register for negative 
// Power Supply Setting
wr_com(0x0017,0x0011); // RADJ=1001, OSC_EN=1    0071
wr_com(0x0023,0x0001); //TEON=1 
wr_com(0x002B,0x0053); // N_DCDC=0x7D 
Delay(100); //Delay 100ms 
wr_com(0x001B,0x0014); // BT=0100, AP=100 
wr_com(0x001A,0x0030); // VC3=000, VC1=101 
wr_com(0x001C,0x000c); // PON=1, VRH=0110 //0c
wr_com(0x001D,0x000b); //BGP=1111 
wr_com(0x001F,0x0050); // VCM=1010101          0053
Delay(20); //Delay 20ms 
wr_com(0x0019,0x000A); // GASENB=0, PON=0, DK=1, XDK=0, VLCD_TRI=0, STB=0 
wr_com(0x0019,0x001A); // GASENB=0, PON=0, DK=0, XDK=0, VLCD_TRI=0, STB=0 
Delay(40); //Delay 40ms 
wr_com(0x0019,0x0012); // GASENB=0, DK=0, XDK=1, VLCD_TRI=0, STB=0, 
//VLCD=2XVCI by 2 CAPs 
Delay(60); //Delay 60ms 
wr_com(0x001E,0x002b); // VCOMG=1, VDV=10000     002b
// DGC Function Enable
//wr_com(0x5A,0x01);
//GC_PA_REG(0x5C);
 //Window set
wr_com(0x0002,0x0000); // Column Address Start Register, High 8 bit 
wr_com(0x0003,0x0000); // Column Address Start Register, Low 8bit 
wr_com(0x0004,0x0000); // Column Address end Register, High 8 bit 
wr_com(0x0005,0x00EF); // Column Address end Start Register, Low 8 bit 
wr_com(0x0006,0x0000); // Row Address Start Register, High 8 bit 
wr_com(0x0007,0x0000); // Row Address Start Register, Low 8bit 
wr_com(0x0008,0x0001); // Row Address end Register, High 8 bit 
wr_com(0x0009,0x008F); // Row Address end Register, Low 8bit 
   // Display ON Setting
wr_com(0x003C,0x00FF); // N_SAP=1100 000
wr_com(0x003D,0x000e); // I_SAP =1100 0000
wr_com(0x0034,0x0038); // EQS=1000 0111
wr_com(0x0035,0x0038); // EQP=0011 1000
wr_com(0x0024,0x0038); // GON=1, DTE=1, D=10
Delay(4);
wr_com(0x0024,0x003C); // GON=1, DTE=1, D=11
wr_com(0x0016,0x0008); // BGR=1    1c
wr_com(0x0001,0x0006); // INVON=0, NORNO=1
wr_com(0x0055,0x0002);
wr_comm(0x0022);
}
void HX8352A_enter_sleep (void)
{
wr_com(0x0024,0x0038); //GON=1, DTE=1, D=10
Delay(40);
wr_com(0x0024,0x0028); //GON=1, DTE=0, D=10
Delay(40);
wr_com(0x0024,0x0000); //GON=0, DTE=0, D=00
wr_com(0x001E,0x0014); // VCOMG=0, VDV=1_0100
Delay(10);
wr_com(0x0019,0x0002); // GASENB=0, PON=0, DK=0,XDK=0, VLCD_TRI=1, STB=0
Delay(10);
wr_com(0x0019,0x000A); // GASENB=0, PON=0, DK=1,XDK=0, VLCD_TRI=1, STB=0
Delay(10);
wr_com(0x001B,0x0040); // AP=000
Delay(10);
wr_com(0x003C,0x0000); // N_SAP=1100 0000
Delay(10);
wr_com(0x0019,0x000B); // GASENB=0, PON=0, DK=0,XDK=0, VLCD_TRI=1, STB=1
Delay(10);
wr_com(0x0017,0x0090); // RADJ=1001, OSC_EN=0
}

void HX8352A_exit_sleep (void)
{
wr_com(0x0017,0x0011); // RADJ=1001, OSC_EN=1
Delay(10);
wr_com(0x0019,0x000A); // GASENB=0, PON=0, DK=0,XDK=0, VLCD_TRI=1, STB=0
wr_com(0x001B,0x0014); // BT=0100, AP=100 
wr_com(0x001A,0x0030); // VC3=000, VC1=101 
wr_com(0x001C,0x000c); // PON=1, VRH=0110 //0c
wr_com(0x001D,0x000b); //BGP=1111 
wr_com(0x001F,0x0050); // VCM=1010101          0053
Delay(10);
wr_com(0x0019,0x000A); // GASENB=0, PON=0, DK=1, XDK=0, VLCD_TRI=0, STB=0 
wr_com(0x0019,0x001A); // GASENB=0, PON=0, DK=0, XDK=0, VLCD_TRI=0, STB=0 
Delay(40);
wr_com(0x0019,0x0012); // GASENB=0, DK=0, XDK=1, VLCD_TRI=0, STB=0, 
Delay(40);
wr_com(0x001E,0x002b); // VCOMG=1, VDV=10000     002b
Delay(100);
wr_com(0x003C,0x00FF); // N_SAP=1100 000
wr_com(0x003D,0x000e); // I_SAP =1100 0000
wr_com(0x0034,0x0038); // EQS=1000 0111
wr_com(0x0035,0x0038); // EQP=0011 1000
wr_com(0x0024,0x0038); // GON=1, DTE=1, D=10
Delay(40);
wr_com(0x0024,0x003C); // GON=1, DTE=1, D=11
}

//====================================黑框画面==================================//
void dis_color1(void)        
{
   unsigned int i,j;
   wr_comm(0x0022);
   DOE=0; 
   COE=1;
   RS = 1;
   CS = 0;
   DP_L = 0x00;
   DP_H = 0xf8;
   WRITE = 0;
   WRITE = 1;
   for(i=0;i<238;i++)
     {
	DP_L = 0xff;
        DP_H = 0xff;
        WRITE = 0;
        WRITE = 1;
     }
   DP_L = 0x1f;
   DP_H = 0x00;
   WRITE = 0;
   WRITE = 1;      
                  
   for(j=0;j<398;j++)
     {
        DP_L = 0x00;
        DP_H = 0xf8;
        WRITE = 0;
        WRITE = 1; 
        for(i=0;i<238;i++)
	  {
	     DP_L = 0x00;
             DP_H = 0x00;
             WRITE = 0;
             WRITE = 1;
	  }
        DP_L = 0x1f;
        DP_H = 0x00;
        WRITE = 0;
        WRITE = 1;	    
     } 

   DP_L = 0x00;
   DP_H = 0xf8;
   WRITE = 0;
   WRITE = 1;
   for(i=0;i<238;i++)
     {
	DP_L = 0xff;
        DP_H = 0xff;
        WRITE = 0;
        WRITE = 1;
     }
   DP_L = 0x1f;
   DP_H = 0x00;
   WRITE = 0;
   WRITE = 1;      

   CS = 1;         
}
//=================================单色画面======================================//
void dis_color2(unsigned int j)                   
{	
   unsigned int i,m;
   wr_comm(0x0022);
   DOE=0; 
   COE=1;
   RS = 1;
   CS = 0;  
   for(i=0;i<400;i++)
    for(m=0;m<240;m++)
      {
        DP_L = j;
        DP_H = j>>8;  
        WRITE = 0;
        WRITE = 1;
      }
   CS = 1;      
}
//=================================雪花画面======================================//
void dis_color3(unsigned int i,unsigned int j)       
{	
   unsigned int n,m;
   wr_comm(0x0022);
   DOE=0; 
   COE=1;
   RS = 1;
   CS = 0; 
   for(n=0;n<200;n++)
     {
       for(m=0;m<120;m++)
	 {
	    DP_L = i;
            DP_H = i>>8;
            WRITE = 0;
            WRITE = 1;
            
	    DP_L = j;
            DP_H = j>>8;
            WRITE = 0;
            WRITE = 1;
	 }  
       for(m=0;m<120;m++)
	 {
	    DP_L = j;
            DP_H = j>>8;
            WRITE = 0;
            WRITE = 1;
            
	    DP_L = i;
            DP_H = i>>8;
            WRITE = 0;
            WRITE = 1;
	 }
     }
  CS = 1; 
}
//=============================8色彩间隔画面======================================//
void dis_color4(unsigned int a,unsigned int b,unsigned int c,unsigned int d,unsigned int e,unsigned int f,unsigned int g,unsigned int h)                              
{
   unsigned int i,m;
   wr_comm(0x0022);
   DOE=0; 
   COE=1;
   RS = 1;
   CS = 0;  
   for(i=0;i<50;i++)
    for(m=0;m<240;m++)
      {
        DP_L = a;
        DP_H = a>>8;  
        WRITE = 0;
        WRITE = 1;
      }
   for(i=0;i<50;i++)
    for(m=0;m<240;m++)
      {
        DP_L = b;
        DP_H = b>>8;  
        WRITE = 0;
        WRITE = 1;
      } 
   for(i=0;i<50;i++)
    for(m=0;m<240;m++)
      {
        DP_L = c;
        DP_H = c>>8;  
        WRITE = 0;
        WRITE = 1;
      }    
    for(i=0;i<50;i++)
    for(m=0;m<240;m++)
      {
        DP_L = d;
        DP_H = d>>8;  
        WRITE = 0;
        WRITE = 1;
      }    
    for(i=0;i<50;i++)
    for(m=0;m<240;m++)
      {
        DP_L = e;
        DP_H = e>>8;  
        WRITE = 0;
        WRITE = 1;
      }    
    for(i=0;i<50;i++)
    for(m=0;m<240;m++)
      {
        DP_L = f;
        DP_H = f>>8;  
        WRITE = 0;
        WRITE = 1;
      }    
    for(i=0;i<50;i++)
    for(m=0;m<240;m++)
      {
        DP_L = g;
        DP_H = g>>8;  
        WRITE = 0;
        WRITE = 1;
      }    
    for(i=0;i<50;i++)
    for(m=0;m<240;m++)
      {
        DP_L = h;
        DP_H = h>>8;  
        WRITE = 0;
        WRITE = 1;
      }    
   CS = 1;  
}
//================================================================================//
void dis_bmp1()
{
unsigned int i;
    wr_comm(0x0022);
    DOE=1;  
    COE=0;
    RS = 1;
    CS = 0; 
    A16=0;
    A17=0;
    A18=0;
     for(i=0;i<0xffff;i++)
    {
   DP_L = i;
   DP_H = i>>8;
   WRITE = 0;
   WRITE = 1;

    }
   DP_L = 0xff;
   DP_H = 0xff;
   WRITE = 0;
   WRITE = 1;
   
    A16=1;
    A17=0;
    A18=0;
    for(i=0;i<0x7700;i++)
    {
   DP_L = i;
   DP_H = i>>8;
   WRITE = 0;
   WRITE = 1;
    }
   COE=1;
   CS = 1;
}

/**********************显示第二幅图片************/
void dis_bmp2()
{
   unsigned int i;
    wr_comm(0x0022);
    DOE=1;  
    COE=0;
    RS = 1;
    CS = 0; 
    A16=1;
    A17=0;
    A18=0;
     for(i=0x7700;i<0xffff;i++)
    {
   DP_L = i;
   DP_H = i>>8;
   WRITE = 0;
   WRITE = 1;

    }
   DP_L = 0xff;
   DP_H = 0xff;
   WRITE = 0;
   WRITE = 1;
   
    A16=0;
    A17=1;
    A18=0;
    for(i=0x0000;i<0xee00;i++)
    {
   DP_L = i;
   DP_H = i>>8;
   WRITE = 0;
   WRITE = 1;
    }
   COE=1;
   CS = 1;
}
//==========================用于测试触摸屏四个画框==============================//
void windows(long int Xstart,long int Ystart)    
{
   unsigned char i,m,*pt;
   wr_com(0x0002,0x0000);
   wr_com(0x0003,Xstart);
   wr_com(0x0004,0x0000);
   wr_com(0x0005,Xstart+29); 
   if (Ystart<256)
   {
   
   wr_com(0x0006,0x0000);
   wr_com(0x0007,Ystart);
   wr_com(0x0008,0x0000);
   wr_com(0x0009,Ystart+29); 
   }
   else
   wr_com(0x0006,0x0001);
   wr_com(0x0007,Ystart-256);
   wr_com(0x0008,0x0001);
   wr_com(0x0009,Ystart+29-256);   
   wr_comm(0x0022);
   pt=point;
   DOE=0; 
   COE=1;
   RS = 1;
   CS = 0; 
   for(i=0;i<30;i++)
    for(m=0;m<30;m++)
      {       
        DP_L = *pt++;
        DP_H = *pt++;_nop_();_nop_();_nop_();_nop_();
        WRITE = 0;_nop_();_nop_();_nop_();_nop_();
        WRITE = 1;_nop_();_nop_();_nop_();_nop_();
      }
   RS = 1;      
   CS = 1;          
 
}
//================================================================================//
void windows_FILL(long int Xstart,long int Ystart)
{
   unsigned char i,n;     
   wr_com(0x0002,0x0000);
   wr_com(0x0003,Xstart);
   wr_com(0x0004,0x0000);
   wr_com(0x0005,Xstart+29); 
   if (Ystart<256)
   {
   
   wr_com(0x0006,0x0000);
   wr_com(0x0007,Ystart);
   wr_com(0x0008,0x0000);
   wr_com(0x0009,Ystart+29); 
   }
   else
   wr_com(0x0006,0x0001);
   wr_com(0x0007,Ystart-256);
   wr_com(0x0008,0x0001);
   wr_com(0x0009,Ystart+29-256);   
   wr_comm(0x0022);
   wr_comm(0x0022);
   for(n=0;n<30;n++)   
     for(i=0;i<30;i++)
       wr_dat(0xffff);       
}
//================================================================================//
void main(void)
{   
    REST = 1;
   Delay(5);
   REST = 0;
   Delay(10);
   REST = 1;
   Delay(5);
   
//   S1 = 1;
//   P0=0xff; P1=0xff; P2=0xff; P3=0xff;	
//   TP_X=0x0000;TP_Y=0x0000;
   
   lcd_int();

while(1)
       {  
 //     dis_bmp1();Switch();  
      dis_color1();Switch();               //黑框画面
      dis_color2(0x7BEf);Switch();         //全白画面
      dis_color2(0xffff);Switch();         //全白画面
	  dis_color3(0xffff,0x0000);Switch();  //雪花画面
	  dis_color2(0xf800);Switch();         //R
	  dis_color2(0x07e0);Switch();         //G
	  dis_color2(0x001f);Switch();         //B
	  dis_color4(0xf800,0x07e0,0x001f,0x07ff,0xf81f,0xffe0,0x0000,0xffff);Switch();                //8色间隔画面
      dis_bmp1();Switch();
//     dis_bmp2();Switch();
     P0=0xff; P1=0xff;P2=0xff;P3=0xff;
      TP_X=0x0000;TP_Y=0x0000;
      dis_color2(0xffff);
A1:  windows(0x0069,0x00B9);  //正中
     IRQ=1;
     AD7843();
   //  displaybout(TP_X,TP_Y); 
     //Delay(10);
     if(((TP_X>=1600)&&(TP_X<=0x2100))&&((TP_Y>=2000)&&(TP_Y<=0x2400)))     
     goto A2;
     else  goto A1;

A2:  windows_FILL(0x0069,0x00B9);   
     windows(0x00D2,0x00172);  //右下角方框

A21: 
     IRQ=1;
     AD7843();
   //  displaybout(TP_X,TP_Y);
     //Delay(10);
     if(((TP_X>=300)&&(TP_X<=800))&&((TP_Y>=3500)&&(TP_Y<=4000)))
     goto A3;
     else  goto A21;

A3: // windows_FILL(0x0000,0x0000); 
     windows_FILL(0x00D2,0x00172); 
     windows(0x0000,0x0172);  //左下角方框
A31: 
     IRQ=1;
     AD7843();
     //displaybout(TP_X,TP_Y);
     //Delay(10);
     if(((TP_X>=3100)&&(TP_X<=3500))&&((TP_Y>=3500)&&(TP_Y<=4000)))
     goto A4;
     else  goto A31;

A4:  //windows_FILL(0x00D2,0x0000);
     windows_FILL(0x0000,0x00172);
     windows(0x0000,0x0000);  //左上角方框
     
A41: 
     IRQ=1;
     AD7843();
     //displaybout(TP_X,TP_Y);
     //Delay(10);
     if(((TP_X>=3100)&&(TP_X<=3500))&&((TP_Y>=300)&&(TP_Y<=800)))    
     goto A5;
     else  goto A41;

A5: // windows_FILL(0x00D2,0x00172);
     windows_FILL(0x0000,0x0000);
     windows(0x00D2,0x0000);  //右上角方框     

     
A51:
     IRQ=1;
     AD7843();
     //displaybout(TP_X,TP_Y);
     //Delay(10);
     if(((TP_X>=300)&&(TP_X<=800))&((TP_Y>=300)&&(TP_Y<=800)))
     goto A6;
     else  goto A51; 
A6:   
   wr_com(0x0002,0x0000);
   wr_com(0x0003,0x0000);
   wr_com(0x0004,0x0000);
   wr_com(0x0005,0x00ef);
   wr_com(0x0006,0x0000);
   wr_com(0x0007,0x0000);
   wr_com(0x0008,0x0001);
   wr_com(0x0009,0x008f);
wr_comm(0x0022);   
  }           
}

//============================触摸屏画面数据====================================//
unsigned char code point[]={/* Image size :  30 x 30 pixels */
  /* 5-6-5 RGB mode, Total data bytes：1,800 */
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,
  0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,
  0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x1F,0xF8,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,
  0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,
  0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0xE0,0xFF,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};
unsigned char code tab2[]=
{    /*--  文字:  0  --*/
/*--  新宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
0x00,0x00,0x00,0x18,0x24,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18,0x00,0x00,

/*--  文字:  1  --*/
/*--  新宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
0x00,0x00,0x00,0x10,0x70,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x7C,0x00,0x00,

/*--  文字:  2  --*/
/*--  新宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
0x00,0x00,0x00,0x3C,0x42,0x42,0x42,0x04,0x04,0x08,0x10,0x20,0x42,0x7E,0x00,0x00,

/*--  文字:  3  --*/
/*--  新宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
0x00,0x00,0x00,0x3C,0x42,0x42,0x04,0x18,0x04,0x02,0x02,0x42,0x44,0x38,0x00,0x00,

/*--  文字:  4  --*/
/*--  新宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
0x00,0x00,0x00,0x04,0x0C,0x14,0x24,0x24,0x44,0x44,0x7E,0x04,0x04,0x1E,0x00,0x00,

/*--  文字:  5  --*/
/*--  新宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
0x00,0x00,0x00,0x7E,0x40,0x40,0x40,0x58,0x64,0x02,0x02,0x42,0x44,0x38,0x00,0x00,

/*--  文字:  6  --*/
/*--  新宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
0x00,0x00,0x00,0x1C,0x24,0x40,0x40,0x58,0x64,0x42,0x42,0x42,0x24,0x18,0x00,0x00,

/*--  文字:  7  --*/
/*--  新宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
0x00,0x00,0x00,0x7E,0x44,0x44,0x08,0x08,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,

/*--  文字:  8  --*/
/*--  新宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
0x00,0x00,0x00,0x3C,0x42,0x42,0x42,0x24,0x18,0x24,0x42,0x42,0x42,0x3C,0x00,0x00,

/*--  文字:  9  --*/
/*--  新宋体12;  此字体下对应的点阵为：宽x高=8x16   --*/
0x00,0x00,0x00,0x18,0x24,0x42,0x42,0x42,0x26,0x1A,0x02,0x02,0x24,0x38,0x00,0x00,
};
















